1.写了两个排序算法

  1.插入排序算法：和选择排序算法对比的话，选择排序算法每一次循环的目的是选择出未排序好的最小元素放到当前循环索引位置上面，也就是每轮循环目的是将最小元素放到当前循环到的索引位置。
		  而插入排序的逻辑算是相对应的，每轮循环的目的是将当前循环索引位置的索引放到合适的位置，一点一点向前面的元素比较，如果比前面元素小的话就交换位置，否则的话直接终止
		  当前循环，意味着这个元素的位置已经放好了。选择排序的内层循环是从前向后遍历的，而插入排序算法的内层循环是从后向前遍历的，而且很有可能提前终止循环，所以插入排序算法
		  的效率是比选择排序要更高的。而且可以用赋值的方法代替交换元素的方法使算法的性能得到最大化提升。
		  插入排序算法的最大特点是对于几乎已经是排好顺序的数组来说效率非常高，就是因为利用了他可以提前终止循环的特点。所以插入排序这种低级算法在特定的场景有自己的价值所在。

  2.冒泡排序算法：冒泡排序算法的每一轮循环的目的是将当前数组中的最大元素放到数组的最末尾的位置。每循环一次数组中的最后一个位置就已经排序完成了，所以数组的长度每次都-1，直到数组的长度
		  变成1的时候，这时候内层循环结束，flag标志不再赋值成true,也就不再执行doWhile循环，整个数组的排序也就完成了。冒泡排序用doWhile+flag标志来实现。冒泡排序的效率比插入排序低。

2.学习了JAVA的反射机制，了解了反射机制的一些API操作，也了解了集合泛型的本质，其实仅仅是在编译阶段限制用户向集合中添加元素，防止用户输入错误类型的参数，而到了程序的运行阶段其实
是去泛型化的操作。可以通过反射跳过编译阶段向带有泛型的集合中添加任何类型的元素。

3.学习了IO流，熟悉了JAVA中的输入流和输出流的知识，同样加深了对对象的序列化和反序列化的理解。

4.文件的上传下载
简单看了一下文件上传和下载的原理用于应用到交通部的项目中去。
