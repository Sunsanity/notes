单例模式：
  1.单例模式分为懒汉式和饿汉式，饿汉式特点是编译时直接创建单例对象，所以客户端加载的速度慢，而获取对象的速度快，因为加载时已经完成了实例化的工作。
  2.懒汉式的特点是加载时不自动创建实例对象，等客户端需要用到对象时才会创建具体的实例对象。所以加载的速度快，而获取对象的速度慢。而且也存在线程安全的问题
  判断实例对象是否为空时会出现多线程实例化多个对象的问题，所以需要解决线程安全问题，第一种方案是方法声明为线程安全方法，但是每次程序判断实例对象是否为空
  时都会判断一次这个锁，所以存在效率问题。
  第二种方案是利用同步代码块和双重判断的方式，使得线程安全，同时只有在实例对象为空时会判断一次锁。
工厂模式：
  1.简单工厂模式：简单工厂模式其实就是一个类，这个类专门用于生产一类对象，这个类通过一个方法让客户端通过传参数的方式得到一个具体的对象。
  2.工厂方法模式：存在一个抽象的工厂类，里面有一个抽象的创建方法，然后工厂子类继承这个抽象父类，实现这个抽象创建方法，在方法体里面真正的创建产品。
  工厂方法模式的最大特点是将对象的创建延迟到子类中进行，这时客户端不需要再传入参数获取产品，而是有具体的子类决定创建哪一个具体产品。缺点是如果某个类需要
  继承其他的父类，也就无法再继承这个工厂抽象父类。但工厂方法模式同样实现了客户端和对象的具体创建过程解耦合的目的。使得内部实现和外部引用隔离开和开闭原则。
  3.抽象工厂模式：抽象工厂模式就是一个工厂接口需要生产一系列的相关的产品族。抽象工厂是一个接口类型，同样是具体的工厂子类实现对象的创建，抽象工厂模式的
  特点就是用于生产一组相关联的产品族。一般抽象工厂中的方法都是相互有关系的，或者生产的产品之间是有关系的，或者这些某个产品的一部分。
  抽象工厂的缺点是如果想要新增一个产品的话，接口也需要变化，所以实现它的所有类都需要改变。
